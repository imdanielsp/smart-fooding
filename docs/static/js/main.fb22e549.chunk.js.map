{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["defaultNumOfRecipes","Recipes","length","defaultRecipeFactor","generateRecipes","numOfRecipes","recipesIdx","recipes","newIdx","Math","floor","random","includes","push","console","log","renderRecipe","recipe","idx","react_default","a","createElement","Col","key","Card","style","width","marginTop","Body","Title","title","Header","ingredients","items","ListGroup","map","ingredient","Item","concat","quantity","units","name","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","storage","window","localStorage","undefined","getItem","JSON","parse","setItem","stringify","parseInt","state","recipeFactor","showIndregients","ingredientsList","clear","setState","evt","target","value","ConstantItems","reduce","prev","curr","flat","has","get","set","Map","document","getElementById","selection","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","execCommand","today","Date","content","encodeURIComponent","Array","from","location","href","getMonth","getDate","getFullYear","id","Navbar","expand","borderBottom","Brand","Toggle","aria-controls","Collapse","Nav","className","Form","inline","Group","controlId","Label","marginRight","Control","onChange","handleNumOfRecipesChanged","bind","type","placeholder","Button","onClick","handleNewList","variant","marginLeft","handleRecipeFactorChanged","handleShowIngredients","Container","Row","Modal","show","onHide","handleClose","closeButton","factor","Check","checked","defaultChecked","label","Footer","handleCopy","handleEmail","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb22e549.chunk.js","sourcesContent":["//@ts-check\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Navbar, Nav, Button, Form, Container, Card, ListGroup, Row, Col, Modal } from \"react-bootstrap\";\nimport Recipes from \"./recipes\";\nimport ConstantItems from \"./constantItems\";\n\nlet defaultNumOfRecipes = Recipes.length > 12 ? 12 : Recipes.length;\nlet defaultRecipeFactor = 1;\n\nconst generateRecipes = (numOfRecipes) => {\n  if (numOfRecipes > Recipes.length || numOfRecipes <= 0) {\n    numOfRecipes = Recipes.length;\n  }\n\n  let recipesIdx = [];\n  let recipes = [];\n\n  do {\n    let newIdx = Math.floor(Math.random() * Recipes.length);\n\n    if (!recipesIdx.includes(newIdx)) {\n      recipesIdx.push(newIdx);\n      recipes.push(Recipes[newIdx]);\n    }\n    console.log(numOfRecipes);\n  } while (recipesIdx.length !== numOfRecipes);\n\n  return recipes;\n};\n\nconst bundleIngredients = ingredients => {\n  return ingredients\n  .concat(\n    ConstantItems.map(title => {\n      return { title, items: [ {\"name\": title, \"quantity\": \"\", \"units\": \"\" } ] }\n    }\n  ))\n  .reduce((prev, curr) => {\n    prev.push(curr.items);\n    return prev.flat();\n  }, [])\n  .reduce((prev, curr) => {\n    if (prev.has(curr.name)) {\n      prev.get(curr.name).quantity += curr.quantity;\n    } else {\n      prev.set(curr.name, curr);\n    }\n    return prev;\n  }, new Map());\n}\n\nconst renderIngredients = (ingredients) => {\n  return (\n    <ListGroup>\n      {ingredients.map((ingredient, idx) => {\n        return (\n          <ListGroup.Item key={idx}>{`${ingredient.quantity} ${ingredient.units}  ${ingredient.name}`}</ListGroup.Item>\n        );\n      })}\n    </ListGroup>\n  )\n};\n\nconst renderRecipe = (recipe, idx) => {\n  return (\n    <Col key={idx}>\n      <Card style={{ width: '18rem', marginTop: 15 }}>\n        {/* <Card.Img variant=\"top\" src={recipe.img} /> */}\n        <Card.Body>\n          <Card.Title>{recipe.title}</Card.Title>\n          <Card.Header>Ingredients</Card.Header>\n          {renderIngredients(recipe.items)}\n        </Card.Body>\n      </Card>\n    </Col>\n  )\n};\n\nconst renderIngredientsList = (ingredients, factor, storage) => {\n  return (\n    <div id=\"ingredients\">{\n      Array.from(ingredients).map((ingredient, idx) => {\n        return (\n          <Form.Check key={idx}\n            type=\"checkbox\"\n            value={ingredient[1].name}\n            onClick={evt => storage.setItem(evt.target.value, evt.target.checked ? \"checked\" : \"unchecked\")}\n            defaultChecked={storage.getItem(ingredient[1].name) === \"checked\" ? true : false}\n            label={`${ingredient[1].quantity * factor} ${ingredient[1].units} ${ingredient[1].name}`} />\n        );\n      })\n    }\n    </div>)\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.storage = window.localStorage;\n\n    let recipes = undefined;\n    if (!this.storage.getItem('recipes')) {\n      recipes = generateRecipes(defaultNumOfRecipes)\n      this.storage.setItem(\"recipes\", JSON.stringify(recipes));\n    } else {\n      recipes = JSON.parse(this.storage.getItem('recipes'));\n    }\n\n    defaultNumOfRecipes = this.storage.getItem('numOfRecipes') ?\n    parseInt(this.storage.getItem('numOfRecipes')) : defaultNumOfRecipes;\n\n    defaultRecipeFactor = this.storage.getItem('recipeFactor') ?\n    parseInt(this.storage.getItem('recipeFactor')) : defaultRecipeFactor;\n\n    this.state = {\n      numOfRecipes: defaultNumOfRecipes,\n      recipeFactor: defaultRecipeFactor,\n      recipes: recipes,\n      showIndregients: false,\n      ingredientsList: []\n    }\n  }\n\n  handleNewList() {\n    let numOfRecipes = parseInt(this.storage.getItem('numOfRecipes'));\n\n    this.storage.clear();\n\n    const recipes = generateRecipes(this.state.numOfRecipes)\n    this.storage.setItem('recipes', JSON.stringify(recipes));\n    this.storage.setItem('numOfRecipes', numOfRecipes + \"\");\n\n    this.setState({\n      recipes: recipes,\n      ingredientsList: [],\n      numOfRecipes: numOfRecipes\n    })\n  }\n\n  handleNumOfRecipesChanged(evt) {\n    this.storage.setItem('numOfRecipes', evt.target.value + \"\");\n    this.setState({ numOfRecipes: parseInt(evt.target.value) });\n  }\n\n  handleRecipeFactorChanged(evt) {\n    this.storage.setItem('recipeFactor', evt.target.value + \"\");\n    this.setState({ recipeFactor: parseInt(evt.target.value) });\n  }\n\n  handleShowIngredients() {\n    this.setState({\n      ingredientsList: bundleIngredients(JSON.parse(JSON.stringify(this.state.recipes))),\n      showIndregients: true,\n    })\n  }\n\n  handleClose() {\n    this.setState({ showIndregients: false });\n  }\n\n  handleCopy() {\n    let ingredientsList = document.getElementById(\"ingredients\");\n    let selection = window.getSelection();\n    let range = document.createRange();\n    range.selectNodeContents(ingredientsList);\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    document.execCommand(\"copy\");\n    selection.removeAllRanges();\n  }\n\n  handleEmail() {\n    let today = new Date();\n    let content = encodeURIComponent(\n      Array.from(this.state.ingredientsList).reduce((prev, curr) =>\n        prev + `${curr[1].quantity} ${curr[1].units} ${curr[1].name} \\n`, \"\"\n      )\n    )\n\n    window.location.href = `mailto:dsantosp12@gmail.com,sespinal222@gmail.com` +\n      `?subject=${today.getMonth() + 1}/${today.getDate()}/${today.getFullYear()} Ingredients List\n      &body=${content}`\n    \n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <Navbar expand=\"lg\" style={{ borderBottom: \"1px solid #E4E4E2\" }}>\n          <Navbar.Brand href=\"#home\">Smart Fooding</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Form inline>\n                <Form.Group controlId=\"numOfRecipes\">\n                  <Form.Label style={{ marginRight: 10 }}>Num. Of Recipes:</Form.Label>\n                  <Form.Control onChange={this.handleNumOfRecipesChanged.bind(this)} type=\"number\" placeholder={this.state.numOfRecipes} className=\"mr-sm-2\" />\n                  <Button onClick={this.handleNewList.bind(this)} variant=\"outline-success\">New List</Button>\n                </Form.Group>\n                <Form.Group controlId=\"recipeFactor\">\n                  <Form.Label style={{ marginLeft: 10, marginRight: 10 }}>Increment Factor:</Form.Label>\n                  <Form.Control onChange={this.handleRecipeFactorChanged.bind(this)} type=\"number\" placeholder={this.state.recipeFactor} className=\"mr-sm-2\" />\n                </Form.Group>\n              </Form>\n            </Nav>\n            <Button onClick={this.handleShowIngredients.bind(this)}>Show Ingredients</Button>\n          </Navbar.Collapse>\n        </Navbar>\n        <Container>\n          <Row>\n            {this.state.recipes.map(renderRecipe)}\n          </Row>\n        </Container>\n        <Modal show={this.state.showIndregients} onHide={this.handleClose.bind(this)}>\n          <Modal.Header closeButton>\n            <Modal.Title>Ingredients</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {\n              renderIngredientsList(this.state.ingredientsList, this.state.recipeFactor, this.storage)\n            }\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose.bind(this)}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleCopy.bind(this)}>\n              Copy\n            </Button>\n            <Button variant=\"primary\" onClick={this.handleEmail.bind(this)}>\n              Send as Email\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}